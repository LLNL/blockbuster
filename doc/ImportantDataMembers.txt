I am going to attempt to list all the important structs and their main uses and locations.  Good luck to me.  

Canvas (canvas.h):  contains functions to do almost everything, including moving the canvas, rendering the image, allocating frames and images, preloading frames, and updating the user interface.   It has a member, the blockbuster interface.   The function pointers it contains come from various members.  I am documenting this right now... 
It looks like 


TO DO:  
Look at gluePrivateData * in canvas class -- eliminate?

Get rid of OldRenderer class, by eliminating xx_Initialize(). This will delete several source files!  Yay. 

Get rid of x11Renderer struct DONE

Get rid of MatchUserInterfaceToRenderer function and thus ui.h and ui.cpp. DONE

Eliminate UserInterface struct, as there is only one interface. DONE

Create New// Renderer classes and get them working and compiling.  DONE
Make classes representing each image type.  
Move the ImageAllocator and deallocators out of canvas and into the image classes.  DONE

Renderers:  x11 (never used), gl, gl_stereo, gltexture, and dmx
NewRenderers:  x11Renderer, glRenderer, glStereoRenderer, glTextureRenderer, dmxRenderer

Major modes: 
CACHING:  DMX vs. local
RENDERING:  DMX vs. x11 vs. gl 
USER INTERFACE:  You might think there were more than one -- only x11 is possible!  See ui.cpp.  This needs to get cleaned up!  

Blockbuster invocation modes:  Local vs. DMX master vs. DMX slave:
In general:  
local is local caching, gl rendering, Qt controls
DMX master is DMX caching, DMX rendering, Qt controls
DMX slave is local caching, gl rendering, no Qt controls

All three modes use "x11 user interface".  In the help menu, it lists gtk and x11 as UI options, but I have disabled gtk and use Qt now. 
