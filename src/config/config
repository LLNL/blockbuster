#$Id: config,v 1.10 2009/05/22 20:34:58 wealthychef Exp $
# placeholder to allow top-level makefile to include config/config, so that during builds, it can have access to variables such as $(MAKE) and $(CC) if needed
SEDFILES = sed '$1' $2 > $(2).new; cp $(2) $(2).bak; mv $(2).new $(2)
ifndef NO_MPI
ifeq ($(shell if uname | grep -v Darwin >/dev/null && type mpiCC>/dev/null 2>&1; then echo yes; else echo no; fi),no)
	NO_MPI = 1
else
export LDFLAGS +=  -Wl,-rpath -Wl,$(INSTALL_DIR)/lib
endif
endif

export INSTALL_DIR ?= $(shell pwd)/$(SYS_TYPE)
export RANLIB=ranlib
export CXX = g++
export CC = gcc
export CPPFLAGS += -I../common -I../config -I$(INSTALL_DIR)/include -I$(INSTALL_DIR)/include/lzo $(OPT) -I.
export LDFLAGS += -L$(INSTALL_DIR)/lib
export X11_INCLUDES += -I/usr/X11R6/include
ifeq ($(shell uname),Darwin)
export CPPFLAGS += -I/opt/local/include -I/sw/include -I/usr/X11R6/include
export LDFLAGS += -L/opt/local/lib -L/sw/lib -L/usr/X11R6/lib
export X11_LIBS +=  -lX11 -lGL
endif

ifdef GPROF
OPT += -g -pg -ftest-coverage -fprofile-arcs
export CPPFLAGS += -g -pg -ftest-coverage -fprofile-arcs
export LDFLAGS +=  -g -pg -ftest-coverage -fprofile-arcs
DEBUG=TRUE
endif

ifdef DEBUG
export OPT ?= -g
else
ifneq ($(shell uname),Darwin)
export OPT ?= -g -O2
else
export OPT ?= -g
endif
endif
export DEBUG

export CXXFLAGS +=  $(CPPFLAGS)
export CFLAGS += $(CPPFLAGS)

machine=$(shell uname)
ifeq ($(machine),Linux)
CXXFLAGS += -fPIC
CFLAGS += -fPIC
CPPFLAGS += -fPIC
CCFLAGS += -fPIC
LDFLAGS += -fPIC
endif

MAKE-INSTALL-DIRS = \
	for dir in lib bin include; do \
		thisdir=$(INSTALL_DIR)/$${dir}; \
		if ! [ -d $${thisdir} ]  && ! mkdir -p $${thisdir}; then \
			echo Cannot make $${thisdir} for installation; \
			exit 1 ; \
		fi; \
	done

